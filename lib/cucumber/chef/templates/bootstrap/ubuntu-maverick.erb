bash -c '

<%= "export http_proxy=\"#{@config[:bootstrap_proxy]}\"" if @config[:bootstrap_proxy] -%>

exists() {
  if command -v $1 &>/dev/null
  then
    return 0
  else
    return 1
  fi
}

install_sh="http://opscode.com/chef/install.sh"
version_string="<%= "-v #{@config[:bootstrap_version]}" if @config[:bootstrap_version] %>"

if ! exists /usr/bin/chef-client; then
  if exists wget; then
    bash <(wget <%= "--proxy=on " if @config[:bootstrap_proxy] %> ${install_sh} -O -) ${version_string}
  else
    if exists curl; then
      bash <(curl -L <%= "--proxy=on " if @config[:bootstrap_proxy] %> ${install_sh}) ${version_string}
    fi
  fi
fi

mkdir -p /etc/chef

cat <<EOF > /tmp/validation.pem
<%= IO.read(@config[:validation_key]) %>
EOF
awk NF /tmp/validation.pem > /etc/chef/validation.pem
rm /tmp/validation.pem

cat <<EOF > /etc/chef/client.rb
log_level               :debug
log_location            "/var/log/chef.log"
chef_server_url         "<%= @config[:chef_server_url] %>"
validation_client_name  "<%= @config[:validation_client_name] %>"
node_name               "<%= @config[:chef_node_name] %>"
EOF

cat <<EOF > /etc/chef/first-boot.json
<%= { "run_list" => @run_list }.to_json %>
EOF

/usr/bin/chef-client -j /etc/chef/first-boot.json'
